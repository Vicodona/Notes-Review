采用哪种遍历方法可唯一确定一棵二叉树：给定一棵二叉树的后序和中序遍历序列
解析： 前序(DLR)  中序(LDR) 后序(LRD)
 前序遍历+中序遍历
 后续遍历+中序遍历 
 给出中序遍历之后再给一个其他的遍历就能够确定了,之后前序和后序则不能确定,因为一个根在前,一个根在后,
 
 若串S=”UP！UP！JD”，则其子串的数目：37
 
若串中每个字符均不相同，则子串个数计算方法为：n(n+1)/2+1；
若串中存在重复子串，则子串个数计算方法为：n(n+1)/2+1-重复个数；
一颗二叉树的叶子节点有5个，出度为1的结点有3个，该二叉树的结点总个数是：12个
http://www.tilaile.com/question/15768

以下哪种排序算法一趟结束后能够确定一个元素的最终位置：堆排序
权值分别为9、3、2、8的结点，构造一棵哈夫曼树，该树的带权路径长度是: 40

          22
 
        /    \
 
      13      9
 
    /   \
 
   5     8
 
 /  \
 
2    3
 WPL = 2*3 + 3*3 + 8*2 + 9*1 = 40

在（）中，只要指出表中任何一个结点的位置，就可以从它出发依次访问到表中其他所有结点。：循环链表


以下哪种设备工作在数据链路层:交换机

后退N帧协议的发送窗口大小是（），接收窗口的大小是（）：>1,=1
TCP释放连接第二次挥手时ACK（）,第三次挥手时ACK（）：值是1，值是1
TCP协议的拥塞控制就是防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。常用的方法有:
慢开始、拥塞控制

对于京东商城高流量访问，预防Ddos的方法可以有：限制同时打开SYN半链接的数目。

网络管理员把优盘上的源代码给程序员参考，但要防止程序误删除或修改，以下正确的加载方式是：mount -r /dev/sdb1 /tools

Ext3日志文件系统的特点是:高可用性
1、高可用性
系统使用了ext3文件系统后，即使在非正常关机后，系统也不需要检查文件系统。宕机发生后，恢复ext3文件系统的时间只要数十秒钟。
2、数据的完整性
ext3文件系统能够极大地提高文件系统的完整性，避免了意外宕机对文件系统的破坏。在保证数据完整性方面，ext3文件系统有2种模式可供选择。其中之一就是“同时保持文件系统及数据的一致性”模式。采用这种方式，你永远不再会看到由于非正常关机而存储在磁盘上的垃圾文件。
3、文件系统的速度
尽管使用ext3文件系统时，有时在存储数据时可能要多次写数据，但是，从总体上看来，ext3比ext2的性能还要好一些。这是因为ext3的日志功能对磁盘的驱动器读写头进行了优化。所以，文件系统的读写性能较之Ext2文件系统并来说，性能并没有降低。
4、数据转换
由ext2文件系统转换成ext3文件系统非常容易，只要简单地键入两条命令即可完成整个转换过程，用户不用花时间备份、恢复、格式化分区等。用一个ext3文件系统提供的小工具tune2fs，它可以将ext2文件系统轻松转换为ext3日志文件系统。另外，ext3文件系统可以不经任何更改，而直接加载成为ext2文件系统。
5、多种日志模式
Ext3有多种日志模式，一种工作模式是对所有的文件数据及metadata（定义文件系统中数据的数据,即数据的数据）进行日志记录（data=journal模式）；另一种工作模式则是只对metadata记录日志，而不对数据进行日志记录，也即所谓data=ordered或者data=writeback模式。系统管理人员可以根据系统的实际工作要求，在系统的工作速度与文件数据的一致性之间作出选择。


DHCP是动态主机配置协议的简称,其作用是：为网络中的主机分配IP地址


以下命令可以用于获取本地ip地址的是：ifconfig

以下命令可以用于获取本机cpu使用率的是：top

重复的数据，会增加磁盘空间的占有率，延长操作数据的时间。可以使用规范化处理数据冗余，以下对符合第一范式的表述正确的是
表中不应该有重复组。列重复拆成另外一张表；行重复拆成多行

以下哪条SQL语句可以返回table1中的全部的key：select tabel1.key from table1 left outer join tabel2 on table1.key=table2.key

以下关于Mysql数据库引擎ＭyISAM的描述错误的是：支持行锁

DELETE和TRUNCATE TABLE都是删除表中的数据的语句，它们的不同之处描述正确的是：TRUNCATE TABLE比DELETE的速度快

在C++中，引用和指针的区别是：引用总是指向一个对象,指针可能不指向对象

关于C++中的友元函数说法正确的是：友元函数不能被继承、友元函数没有this指针


按照进程的功能和运行的程序分类，进程可划分为两大类：
(1) 系统进程：可以执行内存资源分配和进程切换等管理工作；而且，该进程的运行不受用户的干预，即使是root用户也不能干预系统进程的运行。 
(2) 用户进程：通过执行用户程序、应用程序或内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。

针对用户进程，又可以分为交互进程、批处理进程和守护进程三类。 
(1) 交互进程：由一个shell终端启动的进程，在执行过程中，需要与用户进行交互操作，可以运行于前台，也可以运行在后台。 
(2) 批处理进程：该进程是一个进程集合，负责按顺序启动其他的进程。    
(3) 守护进程：守护进程是一直运行的一种进程，经常在linux系统启动时启动，在系统关闭时终止。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。例如httpd进程，一直处于运行状态，等待用户的访问。还有经常用的crond进程，这个进程类似与windows的计划任务，可以周期性的执行用户设定的某些任务。

linux 常用压缩格式 .zip  .gz  .bz2    .tar.gz      .tar.bz2
zip 压缩文件名 源文件 ——压缩文件
zip -r 压缩文件名 源文件 ——压缩目录
mkdir 名字——创建目录
touch 名字 ——创建文件
unzip 压缩文件 ——解压  .zip文件
gzip 源文件 ——压缩为.gz格式的压缩文件，源文件会消失
gzip -c 源文件 > 压缩文件 ——压缩为.gz格式的压缩文件，源文件会消失
gzip -r 目录 ——压缩目录下的所有子文件，但不能压缩目录
gzip -d 压缩文件 ——解压 .gz文件
gunzip 压缩文件名 ——解压 .gz文件 
bzip2 源文件 ——压缩为 .bz2格式，不保留源文件
bzip2 -k 源文件 ——压缩后保留源文件
注意bzip2 不能压缩目录
bzip2 -d 压缩文件 ——解压缩，-k保留压缩文件
bunzip2 压缩文件 ——解压缩
tar -cvf 打包文件名 源文件
tar -zcvf 压缩报名.tar.gz 源文件 ——压缩为.tar.gz格式
tar -zxvf 压缩报名.tar.gz ——解压缩.tar.gz包
tar -jcvf 压缩报名.tar.bz2 源文件 ——压缩为.tar.bz2格式
tar -jxvf 压缩报名.tar.bz2 ——解压缩.tar.bz2包

B关机命令有halt init 0 poweroff   shutdown -h 时间，其中shutdown是最安全的
重启命令有reboot, init 6, shutdow -r 时间

若一台计算机的内存为128MB ，则交换分区的大小通常是：一般是内存*1.5或者2

cat,less,more都可以查看，只是查看的方式不一样，less可以让光标上下移动，more只能用enter键往下翻，cat的话直接跳到最后一页了

建立动态路由需要用到的文件有：/etc/gateways

/etc/hosts 设定用户自已的IP与名字的对应表
/etc/HOSTNAME   设定用户的节点名 
/etc/resolv.conf    设置DNS  
/etc/gateways 设定路由器 

当内网内没有条件建立dns服务器，又不想用IP访问网站，应配置什么文件：hosts

内核分为进程管理系统 、内存管理系统 、I/O管理系统和文件管理系统等四个子系统

在局域网络内的某台主机用ping命令测试网络连接时发现网络内部的主机都可以连同，而不能与公网连通，问题可能是：局域网的网关或主机的网关设置有误

（1）软连接可以跨文件系统，硬连接不可以
（2）硬连接不管有多少个，都指向的是同一个I节点，会把结点连接数增加，只要结点的连接数不是0，文件就一直存在不管你删除的是源文件还是连接的文件。只要有一个存在文件就存在。 当你修改源文件或者连接文件任何一个的时候，其他的文件都会做同步的修改。软链接不直接使用i节点号作为文件指针, 而是使用文件路径名作为指针。所以删除连接文件对源文件无影响，但是删除源文件，连接文件就会找不到要指向的文件。软链接有自己的inode, 并在磁盘上有一小片空间存放路径名。
（3）软连接可以对一个不存在的文件名进行连接 。
（4）软连接可以对目录进行连接。

ifconfig的主要作用是：
用于查看和更改网络接口的地址和参数，包括IP地址、网络掩码、广播地址，其使用权限是超级用户
主要为配置本地回环地址、配置网卡的IP地址、激活网络适配器
1.作用：ifconfig用于查看和更改网络接口的地址和参数，包括IP地址、网络掩码、广播地址，使用权限是超级用户。
2.格式    ifconfig -interface [options] address
3.主要参数如下：
-interface：指定的网络接口名，如eth0和eth1。
up：激活指定的网络接口卡。
down：关闭指定的网络接口。
broadcast address：设置接口的广播地址。
pointopoint：启用点对点方式。
address：设置指定接口设备的IP地址。
netmask address：设置接口的子网掩码。

/etc/hosts 主机名到 IP 地址的映射关系的文件
/etc/HOSTNAME，这个文件存的是你的主机名，就比如你的终端的提示符 yourname@hostname ，这里的hostname就写在这个文件里面
/etc/resolv.conf DNS 服务的配置文件 
/etc/gateways 建立动态路由需要用到的文件 

inode 是index node 简写，中文翻译为索引节点，在linux系统中，文件的管理采用inode实现，具体内容包含：
* 文件的字节数
* 文件拥有者的User ID
* 文件的Group ID
* 文件的读、写、执行权限
* 文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。
* 链接数，即有多少文件名指向这个inode
* 文件数据block的位置
反而，文件名并不是文件管理必须使用的，只是为了方便用户，对inode起的一个别名（可以这么理解，因为inode编号是数字，记忆困难），正常情况下一个inode对应一个文件，一个文件名对应一个inode，此时对应关系是一对一的，但是通过硬链接建立一个连接（又起了一个名字）之后，就会出现多个文件名对应同一个inode的情况，理解起来类似windows系统快捷方式，但本质上有区别。

/var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。
/var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。
/var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。
/var/log/boot.log — 包含系统启动时的日志。
/var/log/daemon.log — 包含各种系统后台守护进程日志信息。
/var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。
/var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。
/var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
/var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。
/var/log/user.log — 记录所有等级用户信息的日志。
/var/log/Xorg.x.log — 来自X的日志信息。
/var/log/alternatives.log – 更新替代信息都记录在这个文件中。
/var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last -f /var/log/btmp | more“。
/var/log/cups — 涉及所有打印信息的日志。
/var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。
/var/log/yum.log — 包含使用yum安装的软件包信息。
/var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。
/var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。
/var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
/var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
除了上述Log文件以外， /var/log还基于系统的具体应用包含以下一些子目录：
/var/log/httpd/或/var/log/apache2 — 包含服务器access_log和error_log信息。
/var/log/lighttpd/ — 包含light HTTPD的access_log和error_log。
/var/log/mail/ –  这个子目录包含邮件服务器的额外日志。
/var/log/prelink/ — 包含.so文件被prelink修改的信息。
/var/log/audit/ — 包含被 Linux audit daemon储存的信息。
/var/log/samba/ – 包含由samba存储的信息。
/var/log/sa/ — 包含每日由sysstat软件包收集的sar文件。
/var/log/sssd/ – 用于守护进程安全服务。

   /etc/profile:此文件为系统的为每个用户设置环境信息,当用户第一次登录时,该文件被执行.
并从/etc/profile.d 目录的配置文件中搜集shell的设置.
/etc/bashrc :为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.
~/.bash_profile :每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该
文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.
~/.bashrc :该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该
该文件被读取.
~/.bash_logout :当每次退出系统(退出bash shell)时,执行该文件. 

bash_profile 、.bashrc 、和.bash_logout
上面这三个文件是bash shell的用户环境配置文件，位于用户的主目录下。
.bash_profile是最重要的一个配置文件，它在用户每次登录系统时被读取，里面的所有 命令都会被bash执行。.profile(由Bourne Shell和Korn Shell使用)和.login(由C Shell使用)两个文件是.bash_profile的同义词，目的是为了兼容其它Shell。 在Debian中使用.profile文件代 替.bash_profile文件。
.bashrc 文件会在bash shell调用另一个bash shell时读取，也就是在shell中再键入bash命令启动一个新shell时就会去读该文件。这样可有效分离登录和子shell所需的环境。但一般 来说都会在.bash_profile里调用.bashrc脚本以便统一配置用户环境。
.bash_logout 在退出shell时被读取。所以我们可把一些清理工作的命令放到这文件中。

登录Linux时，首先启动 /etc/profile 文件，然后再启动用户目录下的 ~/.bash_profile、 ~/.bash_login或 ~/.profile文件中的其中一个(根据不同的linux操作系统的不同，命名不一样)，执行的顺序为：~/.bash_profile、 ~/.bash_login、 ~/.profile。
如果 ~/.bash_profile文件存在的话，一般还会执行 ~/.bashrc文件。

usermod(选项)(参数)：参数若为两个，顺序一般为  usermod (选项)  目标参数  原始参数
-c<备注>：修改用户帐号的备注文字； 
-d<登入目录>：修改用户登入时的目录； 
-e<有效期限>：修改帐号的有效期限； 
-f<缓冲天数>：修改在密码过期后多少天即关闭该帐号； 
-g<群组>：修改用户所属的群组； 
-G<群组>；修改用户所属的附加群组； 
-l<帐号名称>：修改用户帐号名称； 
-L：锁定用户密码，使密码无效； 
-s：修改用户登入后所使用的shell； 
-u：修改用户ID； 
-U:解除密码锁定。

usermod -l 修改账号名称，使用格式：usermod -l  new_name  old_name

STP定义了5种不同的端口状态，关闭(disable)，监听（Listening），学习（Learning），阻断（Blocking）和转发（Forwarding）。 
在RSTP中只有三种端口状态，Discarding、Learning和Forwarding。关闭端口，监听端口，阻塞端口统一合并为禁止端口。







